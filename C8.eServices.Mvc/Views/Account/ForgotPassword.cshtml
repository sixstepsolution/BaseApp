@model C8.eServices.Mvc.ViewModels.ForgotPasswordViewModel
@{
    /**/

    ViewBag.Title = "Forgot Password";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@*<h4>Forgot Password</h4>*@
@*<h2>@ViewBag.Title.</h2>*@

<div>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <strong>Error - </strong> @TempData["Error"].ToString()
        </div>
    }
</div>
@*<hr/>*@

<h4>Username & Password Recovery</h4>
<hr />

<div class="panel-group" id="instructions">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapseInstructions">
                    <span>Instructions</span>
                </a>
            </h4>
        </div>
        1.    Select between Email OR Mobile Number as your recover method to reset your Password

        2.    Enter the Email Address OR Mobile Number you used to register with in the 'Email' OR ‘Mobile Number’ text box.

        3.    Complete the reCaptcha by clicking the 'I am not a robot' check box. If you are presented with a puzzle, follow the instructions to complete it. If you are unsure of how to use the reCaptcha go to this link https://support.google.com/recaptcha/?hl=en#6081912_ and read the instructions under the heading 'Using reCAPTCHA V2'.

        4.    After successfully completing the reCapture click the 'Reset' button.

        5.    Your Username and a temporary password will be sent to your email address.

        If you did not register, please click on the "Register" link.
        <div id="collapseInstructions" class="panel-collapse collapse in">
            <div class="panel-body">
                <p>
                    <ul>
                        <li>
                            Select between Email OR Mobile Number as your recover method to reset your Password
                        </li>
                        <li>
                            Enter the Email Address OR Mobile Number you used to register with in the 'Email' OR ‘Mobile Number’ text box.
                        </li>
                        <li>
                            Complete the reCaptcha by clicking the 'I am not a robot' check box. If you are presented with a puzzle, follow the instructions to complete it. If you are unsure of how to use the reCaptcha go to this link https://support.google.com/recaptcha/?hl=en#6081912_ and read the instructions under the heading 'Using reCAPTCHA V2'.
                        </li>
                        <li>
                            After successfully completing the reCapture click the 'Reset' button.
                        </li>
                        <li>
                            Your Username and a temporary password will be sent to your Email Address OR Mobile Number.
                        </li>
                    </ul>
                </p>
                <p>
                    If you did not register, please click on the "Register" link.
                </p>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("ForgotPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    @*<h4>Enter your email.</h4>*@
    @*<div class="form-horizontal">*@
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <br />
    <br/>
    <div class="form-group" style="margin-top:-15px">
        @Html.Label("Select Recovery Method", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            <div style="margin-left:0px">
                <label>@Html.RadioButton("Recovery method", "true", new { @name = "RecoveryType", @onclick = "ShowRecurring()" }) Email</label>&nbsp;&nbsp;  <label>@Html.RadioButton("Recovery method", "false", new { @name = "RecoveryType", @id = "NoneRecurring", @onclick = "HideRecurring()" }) Mobile Number</label>
                @*@Html.ValidationMessageFor(model => model.DebitOrder.IsRecurring, "", new { @class = "text-danger" })*@
            </div>
        </div>
    </div>

    <div id="Emailblock" style="display:none">
        @*//@Html.ValidationSummary("", new { @class = "text-danger" })*@
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control"@*, @required = true*@})
            </div>
        </div>
    </div>
    <div id="MobileBlock" style="display:none">

        <div class="form-group">
            @Html.LabelFor(m => m.MobileNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control",maxlength = "10",minlength = "10"@*, @required = true*@})
            </div>
        </div>
    </div>
    <div id="captchaGrp" class="form-group" style="display:none">
        <div class="col-md-offset-2 col-md-10">
            <div class="g-recaptcha" data-sitekey="6Ld1VagUAAAAAE_eoOCg964izOjt_v58m_RyBgiC" data-callback="validateCaptcha"></div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="btnSubmit" disabled type="submit" class="btn btn-primary" value="Reset" />
        </div>
    </div>

}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryvalidate")
    }*@

<script src="https://www.google.com/recaptcha/api.js?hl=en" async defer></script>

<script type="text/javascript">
    @*$(function () {
        var netConnection = @(ViewBag.NetConnection.ToString().ToLower());

        if (!netConnection) {
            $('#captchaGrp').hide();
            $("#btnSubmit").prop('disabled', false);
        }
    });*@

    function validateCaptcha(response) {
        if (response.length == 0)
            $("#btnSubmit").prop('disabled', true);
        else
            $("#btnSubmit").prop('disabled', false);
    }

               function ShowRecurring() {
                   $("#Emailblock").show();
                   $("#captchaGrp").show();
                   $("#MobileBlock").hide();
            //$("#DebitOrder_IsRecurring").val(true);
            //$("#NoneRecurring").val(false);

        }
        function HideRecurring() {
             $(".isRecurring").hide();
                   $("#Emailblock").hide();
            $("#MobileBlock").show();
            $("#captchaGrp").show();
        }
</script>
<script>
    setInputFilter(document.getElementById("MobileNumber"), function (value) {
        return /^\d*$/.test(value);
    });
    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                }
            });
        });
    }

    function blockSpecialChar(e) {
        var k;
        document.all ? k = e.keyCode : k = e.which;
        return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57));
    }


</script>



