@model IEnumerable<C8.eServices.Mvc.Models.SystemUser>
@using C8.eServices.Mvc.DataAccessLayer
@using C8.eServices.Mvc.Keys
@using C8.eServices.Mvc.Models

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
    var listItems = new List<ListItem> { new ListItem { Text = "Excel", Value = "Excel" },
                                 new ListItem { Text = "Word", Value = "Word" },
                                 new ListItem { Text = "PDF", Value = "PDF" }};
    var reportTypeKey = ReportTypeKeys.CustomerProfile;
}

<link rel="stylesheet" type="text/css" href="~/content/jquery.datetimepicker.css" />

<h4>@ViewBag.CustomerProfileStatus</h4>
<hr />

<div class="panel-group" id="instuctions">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 id="instructionsTitle" class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapseInstructions">
                    <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                    Instructions
                </a>
            </h4>
        </div>
        <div id="collapseInstructions" class="panel-collapse collapse">
            <div class="panel-body">
                <p>
                    This view shows customer details for customers whose accounts have been locked on Siyakhokha. Please see steps below explaining each action.
                </p>
                <p>
                    <b>Search</b> - Allows to search the database. Search can be done on any field currently listed on the table.<br />
                    <b>Reset</b> - Refreshes the search results.<br />
                    <b>Unlock</b> - Allows Super Administrator/ Administrator to unlock customers account allowing them access into the system.<br />
                    
                </p>
            </div>
        </div>
    </div>
</div>
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#accountsCollapse">
                    Locked Accounts
                </a>
            </h4>
        </div>
        <div id="accountsCollapse" class="panel-collapse collapse in">
            <div class="panel-body">
                <div class="fixed-table-toolbar">
                    <div class="pull-left">
                        <input type="text" id="startDate" class="form-control" />
                    </div>
                    <div class="pull-left">
                        <input type="text" id="endDate" class="form-control" />
                    </div>
                    <div class="pull-left">
                        &nbsp;
                        <button id="btnFilter" class="btn btn-primary">Filter</button>
                    </div>
                </div>
                <div id="toolbar">
                    &nbsp;
                    <button id="btnSearch" class="btn btn-primary">Search</button>
                    <button id="btnRefresh" class="btn btn-primary">Reset</button>
                </div>
                <div style="float: right">
                    @Html.DropDownList("format", new SelectList(listItems), "Export To", new { @class = "btn-primary form-control col-md-2 BoToDoHide", id = "format" })
                </div>
                <div style="clear: both"></div>
                <table id="customerTable"
                       class="table table-striped"
                       data-toggle="table"
                       data-toolbar="#toolbar"
                       data-url="@Url.Action("LoadLockedCustomers", "Customer")"
                       data-query-params-type="Else"
                       data-pagination="true"
                       data-export="true"
                       data-side-pagination="server"
                       data-page-size="50"
                       data-height="1400"
                       data-search="true">
                    <thead>
                        <tr>
                            <th data-field="FullName">Full Name</th>
                            <th data-field="EmailAddress">Email</th>
                            @*<th data-field="CustomerType">Customer Type</th>*@
                            @*<th data-field="ProfileStatus">Profile Status</th>*@
                            <th data-field="DateCreated">Date Created</th>
                            @*<th data-formatter="sendActivationEmail">Email Activation</th>*@
                            <th data-formatter="edit">Edit</th>
                            @*<th data-formatter="details">Details</th>
                            <th data-formatter="deleteProfile">Delete</th>*@
                        </tr>
                    </thead>
                </table>
                <hr />
            </div>
        </div>
    </div>
</div>

<div id="activationEmailModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Activation Email</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div id="modalResponseText"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="@Url.Content( "~/Scripts/jquery.datetimepicker.js" )"></script>
<script type="text/javascript">
    $(function () {
        var $table = $('#customerTable'),
            $button = $('#btnRefresh'),
            $btnSearch = $('#btnSearch'),
            $btnFilter = $('#btnFilter');;

        var today = new Date();
        var day = ("0" + today.getDate()).slice(-2);
        var month = ("0" + (today.getMonth() + 1)).slice(-2);
        var year = today.getFullYear();

        $('#startDate').datetimepicker({
            format: 'Y/m/d',
            timepicker: false,
            scrollInput: false,
            value: '2019/07/01',
            onShow: function (ct) {
                this.setOptions({
                    maxDate: jQuery('#endDate').val() ? jQuery('#endDate').val() : false
                });
            }
        });

        $('#endDate').datetimepicker({
            format: 'Y/m/d',
            timepicker: false,
            scrollInput: false,
            value: year + "/" + month + "/" + day,
            onShow: function (ct) {
                this.setOptions({
                    minDate: jQuery('#startDate').val() ? jQuery('#startDate').val() : false
                });
            }
        });

        $(document).ready(function () {
            $("#format").on('change', function (event) {

                var searchValue = $('.fixed-table-toolbar').find('.search > :input').val();
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();

                var type = getSelectedFormat();
                var url;

                if (type === "Excel") {
                    //url = 'Report/AsMsOffice?searchText=' + searchValue + '&title=' + '@ViewBag.CustomerProfileStatus' + '&reportKey=rpt_CustomerProfile&format=Excel&referenceId=' + @ViewBag.CustomerProfileStatusId + '';
                    url = "@Html.Raw(@Url.Action("AsMsOffice","Report", new
                      {
                          searchText = "searchValue",
                          title = ViewBag.CustomerProfileStatus,
                          reportKey = reportTypeKey,
                          format = "Excel",
                          referenceId = ViewBag.CustomerProfileStatusId,
                          startDate = "_startDate",
                          endDate = "_endDate"
                      }))";
                    url = url.replace("searchValue", searchValue).replace("_startDate", startDate).replace("_endDate", endDate);
                    window.location.href = url;
                } else if (type === "PDF") {
                     url = "@Html.Raw(@Url.Action("AsMsOffice","Report", new
                       {
                           searchText = "searchValue",
                           title = ViewBag.CustomerProfileStatus,
                           reportKey = reportTypeKey,
                           format = "PDF",
                           referenceId = ViewBag.CustomerProfileStatusId,
                           startDate = "_startDate",
                          endDate = "_endDate"
                      }))";
                    url = url.replace("searchValue", searchValue).replace("_startDate", startDate).replace("_endDate", endDate);
                    window.location.href = url; // Output PDF
                } else if (type === "Word") {
                   url = "@Html.Raw(@Url.Action("AsMsOffice","Report", new
                     {
                         searchText = "searchValue",
                         title = ViewBag.CustomerProfileStatus,
                         reportKey = reportTypeKey,
                         format = "Word",
                         referenceId = ViewBag.CustomerProfileStatusId,
                         startDate = "_startDate",
                          endDate = "_endDate"
                      }))";
                    url = url.replace("searchValue", searchValue).replace("_startDate", startDate).replace("_endDate", endDate);
                    window.location.href = url;
                } else {
                    bootbox.alert("Please select format first.");
                    event.preventDefault();
                }
            });
        });
        $(function () {
            // Customer Profile Buttons
            $button.click(function () {
                resetSearch();
            });

            $btnSearch.click(function () {
                customSearch();
            });

            $btnFilter.click(function () {
                customSearch();
            });
        });

        function customSearch() {
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();
            var searchVal = $('.fixed-table-toolbar').find('.search > :input').val();
            $table.bootstrapTable('refresh', {
                url: '@Url.Action("LoadLockedCustomers", "Customer")/?startDate=' + startDate
                + '&endDate=' + endDate,
                query: {
                    searchText: searchVal,
                    pageNumber: 1
                }
            });
        }

        function resetSearch() {
            $('.fixed-table-toolbar').find('.search > :input').val('');
            resetFilters();
            $table.bootstrapTable('refresh', {
                url: '@Url.Action("LoadLockedCustomers", "Customer")',
                query: {
                    searchText: '',
                    pageNumber: 1
                }
            });
        }

        function resetFilters() {
            $('#startDate').val('2009/09/21');
            $('#endDate').val(year + "/" + month + "/" + day);
        }
        window.edit = function (value, row, index) {
            return "<input type='button' value='Unlock Account' onclick='RedirectEdit(\"" + row.Id + "\");' style = 'font-size:12px;' class = 'btn btn-primary'>";
        }
       
        window.RedirectEdit = function (Id) {
            try {
                window.open(
                    '@Url.Action("UnlockAccount", "Customer")/?q=' + Id
                );
            }
            catch (ex) {
                console.log(ex);
            }
        }

       

       
        window.sendActivationEmail = function (value, row, index) {
            if (row.AccountStatus == "Pending") {
                return "<input type='button' value='Send Activation Email' onclick='SendEmail(" + row.SystemUserId + ");' style = 'font-size:12px;' class = 'btn btn-primary'>";
            }
            else {
                return "<span>Activated</span>";
            }
        }

        function refreshCustomerProfile() {
            $(function () {
                $table.bootstrapTable('refresh', {
                    url: '@Url.Action("LoadLockedCustomers", "Customer")',
                    query: {
                        searchText: '',
                        pageNumber: 1
                    }
                });
            });
        }

        window.SendEmail = function (systemUserId) {
            try {
                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("SendActivationEmail", "Customer")",
                    data: { systemUserId: systemUserId },
                    cache: false,
                    success: function (response) {
                        switch (response.result) {
                            case "Success":
                                $("#modalResponseText").html("Success! Activation email sent to customer.");
                                break;
                            default:
                                $("#modalResponseText").html("Error! An Unexpected error has occurred. Please try again later.");
                                break;
                        }

                        $("#activationEmailModal").modal('show');
                    },
                    error: function (response) {
                        console.log(response.result);
                    }
                });
            }
            catch (ex) {
                console.log(ex);
            }
        }
    });

    function getSelectedFormat() {
        //Get selected value of the dropdown list
        var inp = $("select[name='format'] option:selected").val();
        return inp;
    }

    @*// Displays a triangle to tell users if the panel is collapsable.*@
    $('#instructionsTitle').on("click", function () {
        var span = $('#instructionsTitle').find('span');
        if (span.attr('class') === 'glyphicon glyphicon-triangle-top') {
            span.removeClass('glyphicon-triangle-top');
            span.addClass('glyphicon-triangle-bottom');
        } else {
            span.removeClass('glyphicon-triangle-bottom');
            span.addClass('glyphicon-triangle-top');
        }
    });
</script>
