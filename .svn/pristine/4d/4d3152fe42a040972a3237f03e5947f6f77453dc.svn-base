@using C8.eServices.Mvc.Keys
@model C8.eServices.Mvc.ViewModels.CustomerProfileViewModel
@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<script src="@Url.Content("~/Scripts/moment.js")"></script>

<div class="panel-group" id="instructions">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapseInstructions">
                    <span>Instructions</span>
                </a>
            </h4>
        </div>
        <div id="collapseInstructions" class="panel-collapse collapse">
            <div class="panel-body">
                <p> The Profiles Dashboard shows a summary of the agent's details along with their customers and their respective linked accounts. Please see steps below explaining each action.</p>
                <p>1. "Customer Information" - Shows a summary of the agent's details, it will be blank if no information has been entered (New registration). The "Click here to update profile" link redirects to the Manage Profile page where the agent captures/edits their information.</p>
                <p>2. "Add Customer" - Allows the agent to add a new customer. The "Add customer" link redirects to the Manage Profile page where the agent captures/edits the customer's information</p>
                <p>3. "Profile - Edit" - Allows the agent to edit the customer's personal details.</p>
                <p>4. "Linked Account - Add" - Allows the agent to link a new account to a customer.</p>
                <p>5. "Linked Account - Show" - Allows the agent to view all linked accounts for a customer. Once the "Show" button is clicked, the "Linked Accounts" table will load with the customer's current linked accounts.</p>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">Customer Information</div>
    <div class="panel-body">
        <div class="panel-body">
            <label>Please click @Html.EncodedActionLink("here", "ManageProfile", "Profile", new { agentId = (Model.Agent != null) ? Model.Agent.Id : 0, customerId = Model.Customer.Id, systemUserId = Model.Customer.SystemUserId, viewId = Model.ViewId }, new { @style = "font-size: 14px!important; font-weight:bold!important;" }) to create or update this profile.</label><br />
            @Html.Partial("~/Views/Shared/_CustomerPartial.cshtml", Model)
        </div>
    </div>
</div>
<br />
@if (Model.Customer.Id != 0 && Model.Customer.Status.Key != StatusKeys.CustomerActive)
{
    <div class="alert alert-warning col-md-12">
        <h3>Please note:</h3>
        <p>Your Siyakhokha Profile is <strong>pending documentation</strong>. This will need to be approved by the Siyakhokha Administrators.</p>
        <br />
        <p>Once Your Siyakhokha Profile is approved, you will be able to continue using Siyakhokha.</p>
    </div>
    <br />
}
    @if (Model.Customer.Id != 0 && Model.Customer.Status.Key == StatusKeys.CustomerActive)
    {
        <ul class="list-inline">
            <li>@Html.EncodedActionLink("Link Account", "LinkedAccounts", "Profile", new { customerId = Model.Customer.Id, agentId = Model.Agent.Id }, new { @class = "btn btn-primary" })</li>
            <li></li>
        </ul>

        <div class="panel panel-default">
            <div class="panel-heading">Entity Linked Accounts</div>
            <div style="width: 90%; margin: 0 auto;">
                <br />
                <table id="agentAccountsTable" class="table table-bordered table-hover table-striped panel panel-default ">
                    <thead>
                        <tr>
                            <th>Account Number</th>
                            <th>Status</th>
                            <th>Date Created</th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <br /><br />

        @Html.EncodedActionLink("Add Customer", "ManageProfile", "Profile", new { agentId = Model.Agent.Id, viewId = 3 }, new { @class = "btn btn-primary" })
        <br /><br />

        <div class="panel panel-default">
            <div class="panel-heading">Customers Managed</div>
            <div style="width: 90%; margin: 0 auto;">
                <br />
                <table id="customersTable" class="table table-bordered table-hover table-striped panel panel-default ">
                    <thead>
                        <tr>
                            <th>Full Name</th>
                            <th>Email Address</th>
                            <th>Phone</th>
                            <th>Physical Address</th>
                            <th>Status</th>
                            <th> </th>
                            <th> </th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>

        <div id="linkedAcc">

            <div class="panel panel-default">
                <div class="panel-heading">Linked Accounts for Customer - <label id="customerDiv"></label></div>
                <div style="width: 90%; margin: 0 auto;">
                    <br />
                    <table id="accountsTable" class="table table-bordered table-hover table-striped panel panel-default ">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Status</th>
                                <th>Date Created</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    }

    @section Scripts{
        <script src="@Url.Content("~/scripts/Datatables/jquery.dataTables.min.js")"></script>
        <script src="@Url.Content("~/scripts/Datatables/dataTables.bootstrap.js")"></script>
        <script>

        window.buttonClick = function (id) {
            var table2 = $('#accountsTable').DataTable();
            console.log(id);
            table2.destroy();
            table2.ajax.reload();
        }

        $(document).ready(function () {

            $('#customersTable').DataTable({
                "ajax": {
                    "url": "@Url.Action("LoadCustomers", "Profile", new {q = Model.Agent.Data})",
                    "type": "GET",
                    "datatype": "json",
                    "timeout": 60000
                },
                "columns": [
                    { "data": "FullName", "autoWidth": true },
                    { "data": "EmailAddress", "autoWidth": true },
                    { "data": "CellPhoneNumber", "autoWidth": true },
                    { "data": "PhysicalAddress", "autoWidth": true },
                    { "data": "Status.Name", "autoWidth": true },
                    {
                        "data": "DataList",
                        "title": "Profile",
                        "render": function (data, type, row) {
                            var myUrl = '@Url.Action("ManageProfile", "Profile")/?q=' + data[0];
                            return '<a href=\"' + myUrl + '\" class=\"btn btn-primary btn-sm\">Edit</a>';
                        }

                    },
                    {
                        "data": "DataList",
                        "title": "Linked Account",
                        "render": function (data, type, row) {
                            var myUrl = '@Url.Action("Index","CustomerLinkedAccount")/?q=' + data[1];
                            return '<a href=\"' + myUrl + '\" class=\"btn btn-primary btn-sm\">Add</a>&nbsp&nbsp' +
                                '<button class=\"btn btn-primary btn-sm\" onclick=\"showLinkedAccounts(\'' + data[2] + '\', \'' + data[3] + '\');\">Show</button>';
                        }
                    }
                ],
                "language": {
                    "emptyTable": "No customers",
                },
            });

            $('#agentAccountsTable').DataTable({
                "ajax": {
                    "url": "@Url.Action("LoadAccounts", "Profile", new {q = Model.Customer.Data})",
                    @*"url": "/profile/LoadAccounts/@Model.Customer.Id",*@
                    "type": "GET",
                    "datatype": "json",
                    "timeout": 60000
                },
                "columns": [
                    { "data": "Account.AccountNumber", "autoWidth": true },
                    { "data": "Status.Name", "autoWidth": true },
                    {
                        "data": "CreatedDateTime", "autoWidth": true,
                        "render": function (data) {
                            return convertDate(data);
                        }
                    },
                    {
                        "data": "Data",
                        "title": "Linked Account",
                        "render": function (data, type, row) {
                            @*//return '<a href=\"LinkedAccountsDetails/' + data + '\">Edit</a>';*@
                            var myUrl = '@Url.Action("LinkedAccountsDetails", "Profile")/' + '?q=' + data;
                            var detailsUrl = '@Url.Action("DisplayLinkedAccount", "CustomerLinkedAccount")/' + '?q=' + data;
                            return '<a href=\"' + myUrl + '\" class=\"btn btn-primary btn-sm\">Edit</a> &nbsp <a href=\"' + detailsUrl + '\" class=\"btn btn-primary btn-sm\">Details</a>';
                        }

                    }
                ],
                "language": {
                    "emptyTable": "No linked accounts",
                },
                "Initcomplete": ""
            });

            window.showLinkedAccounts = function (data, fullName) {
                $("#customerDiv").html(fullName);

                var custAccounts = $('#accountsTable').DataTable({
                    "ajax": {
                        "url": "@Url.Action("LoadAccounts", "Profile")/?q=" + data,
                        "type": "GET",
                        "datatype": "json",
                        "timeout": 60000
                    },
                    "columns": [
                        { "data": "Account.AccountNumber", "autoWidth": true },
                        { "data": "Status.Name", "autoWidth": true },
                        {
                            "data": "CreatedDateTime",
                            "render": function (data) {
                                return convertDate(data);
                            },
                            "autoWidth": true
                        },
                        {
                            "data": "Data",
                            "title": "Linked Account",
                            "render": function (data, type, row) {
                                var myUrl = '@Url.Action("LinkedAccountsDetails", "Profile")/' + '?q=' + data;
                                var detailsUrl = '@Url.Action("DisplayLinkedAccount", "CustomerLinkedAccount")/' + '?q=' + data;
                                return '<a href=\"' + myUrl + '\" class=\"btn btn-primary btn-sm\">Edit</a> &nbsp <a href=\"' + detailsUrl + '\" class=\"btn btn-primary btn-sm\">Details</a>';
                            }

                        }
                    ],
                    "language": {
                        "emptyTable": "No linked accounts",
                    },
                    "destroy": true,
                });
            }

            function convertDate(data) {
                try {
                    var dtStart = new Date(parseInt(data.substr(6)));
                    var dtStartWrapper = moment(dtStart);
                    return dtStartWrapper.format("DD/MM/YYYY");
                }
                catch (ex) {
                }
            }

        });
        </script>
    }