@model C8.eServices.Mvc.ViewModels.ConsumptionViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<h4>Siyakhokha Statistic Dashboard</h4>

<div class="panel-group" id="newConsumption">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapseNewLinkedAccount">
                    <span>View Consumption</span>
                </a>
            </h4>
        </div>
        <div id="collapseNewLinkedAccount" class="panel-collapse collapse in">
            <div class="panel-body">
                <div class="alert alert-warning" id="associatedAlert" style="display:none">
                    @ViewBag.AccountsMessage
                    <p id="ErrCon"></p>
                </div>
                <div class="form-horizontal">

                    <div class="form-group row">
                        <div class="col-xs-3">
                            <label>Meter Type</label><br />
                            @Html.DropDownListFor(model => model.MeterType, (SelectList)ViewBag.MeterTypes, "Select type ...", htmlAttributes: new { @class = "form-control", id = "meterTypeDdl", @required = true })
                        </div>
                        <div class="col-xs-3">
                            <label>Account No</label><br />
                            @Html.DropDownListFor(model => model.AccountNumber, (SelectList)ViewBag.AccountNumbers, "Select type ...", htmlAttributes: new { @class = "form-control", id = "accountNumberDdl", @required = true })
                        </div>
                        <div class="col-xs-2">
                            &nbsp;<br />
                        </div>
                    </div>
                    @*<div class="col-md-12">*@
                    <form class="">
                        <div class="row">

                            <div class="col-xs-3">
                                <label class="control-label">Start Date </label>

                            </div>
                            <div class="col-xs-3">
                                <label class="control-label">End Date </label>

                            </div>
                            <div class="col-xs-2">


                            </div>

                        </div>
                        <div class="row">

                            <div class="col-xs-3">

                                @Html.TextBox("startDate", "Select Date", new { @class = "form-control", @id = "startDate" })
                            </div>
                            <div class="col-xs-3">

                                @Html.TextBox("endDate", "Select Date", new { @class = "form-control", id = "endDate" })
                            </div>
                            <div class="col-xs-2" style="padding-top:0px">
                                <button id="submitShowGraph" type="button" class="btn btn-primary">Show</button>
                            </div>

                        </div>
                    </form>
                    @*</div>*@
                    @*<div class="form-group row">
                            <div class="col-xs-3">
                                <label>Start Date</label><br />
                                <input class="form-control" type="date" id="startDate">
                            </div>
                            <div class="col-xs-3">
                                <label>End Date</label><br />
                                <input class="form-control" type="date"  id="endDate">
                            </div>
                            <div class="col-xs-2">
                                &nbsp;<br />
                                <button id="submitShowGraph" type="button" class="btn btn-primary">Show</button>
                            </div>
                        </div>*@

                </div>
            </div>
        </div>
    </div>
</div>

<div id="chartContainer" style="height: 300px; width: 100%;"></div>

@section Scripts {
    <script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
    <script src="https://canvasjs.com/assets/script/jquery.canvasjs.min.js"></script>
    <script src="@Url.Content("~/scripts/jquery.datetimepicker.js")"></script>
    <script>

        $('#startDate').datetimepicker({
            format: 'Y/m/d',
            timepicker: false,
            onSelectDate: function (dt, i) {
                $('#endDate').datetimepicker({
                    format: 'Y/m/d',
                    minDate: dt,
                    maxDate:0,
                    timepicker: false
                });
            }
        });

        function convertToDate(data) {
            @*// The 6th+ positions contain the number of milliseconds in Universal Coordinated Time between the specified date and midnight January 1, 1970.*@
            var dtStart = new Date(parseInt(data.substr(6)));
            @*// Format using moment.js.*@
            var dtStartWrapper = moment(dtStart);
            return dtStartWrapper.format("YYYY/MM/DD");
        }

        function formatDate(data) {
            @*// Format using moment.js.*@
            var dtStartWrapper = moment(data);
            return dtStartWrapper.format("YYYY/MM/DD");
        }

    </script>
    <script type="text/javascript">

        $(function () {
            $("#submitShowGraph").click(function () {
                var meterType = $('#meterTypeDdl').val();
                var accountNumber = $('#accountNumberDdl').val();
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();
                var date1 = $('#startDate').val();
                var date2 = $('#endDate').val();
                date1 = date1.split('/');
                date2 = date2.split('/');
                date1 = new Date(date1[0], date1[1], date1[2]);
                date2 = new Date(date2[0], date2[1], date2[2]);
                date1_unixtime = parseInt(date1.getTime() / 1000);
                date2_unixtime = parseInt(date2.getTime() / 1000);
                var timeDifference = date2_unixtime - date1_unixtime;
                var timeDifferenceInHours = timeDifference / 60 / 60;
                var timeDifferenceInDays = timeDifferenceInHours / 24;
                var data = "{ 'meterType': '" + meterType + "', 'accountNumber': '" + accountNumber + "', 'startDate': '" + startDate + "', 'endDate': '" + endDate + "' }";

                if (meterType != "" && accountNumber != "" && startDate != "Select Date" && endDate != "Select Date" && (timeDifferenceInDays >= 27)) {
                    $('#associatedAlert').hide();
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetConsumption", "Consumption")",
                        data: data,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (dataPoints) {
                            if (dataPoints != null) {
                                var dp = $.parseJSON(dataPoints);

                                var options = {
                                    animationEnabled: true,
                                    title: {
                                        text: "Meter Consumption - " + @DateTime.Now.Year
                                    },
                                    axisY: {
                                        title: "Consumption",
                                        includeZero: false
                                    },
                                    axisX: {
                                        title: "Dates"
                                    },
                                    data: [{
                                        type: "column",
                                        dataPoints: dp
                                    }]
                                };

                                $("#chartContainer").CanvasJSChart(options);
                            } else {
                                alert("No consumption data found.");
                            }
                        },
                        failure: function (response) {
                            //alert('f: ' + response.responseText);
                            alert("Date range is out of bounds")
                        },
                        error: function (response) {
                            //alert('e: ' + response.responseText);
                            alert("No consumption data found. Please check your date range is correct.");
                        }
                    });
                }
                else {
                    document.getElementById("ErrCon").innerHTML = "";
                    if (meterType == "" ||accountNumber == "" || startDate == "Select Date"||endDate == "Select Date") {
                    if (meterType =="") {
                        document.getElementById("ErrCon").innerHTML += "Please select a Meter Type.<br/>";
                    }
                    if (accountNumber =="" ) {
                        document.getElementById("ErrCon").innerHTML += "Please select an Account No.<br/>";
                    }
                    if (startDate == "Select Date") {
                        document.getElementById("ErrCon").innerHTML += "Please select a Start Date.<br/>";

                    }
                    if (endDate == "Select Date") {
                        document.getElementById("ErrCon").innerHTML += "Please select an End Date.<br/>";


                        }
                        }
                    else {
                        document.getElementById("ErrCon").innerHTML += "Please select a date range that is more than a month.<br/>";

                    }
                    $('#associatedAlert').show();
                }
            });
        });
    </script>
}